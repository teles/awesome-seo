name: Generate awesome.json

on:
    push:
        branches: [main, feature/37-page]
        paths:
            - "README.md"
    workflow_dispatch: # Allow manual triggering

jobs:
    generate:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Parse README and generate JSON
              run: |
                  node -e "
                  const fs = require('fs');

                  // Read README.md
                  const readmeContent = fs.readFileSync('README.md', 'utf8');

                  // Parse the README content
                  const tools = [];
                  const lines = readmeContent.split('\n');
                  let currentCategory = '';

                  for (let i = 0; i < lines.length; i++) {
                    const line = lines[i].trim();
                    
                    // Check for category headers (## **Category Name**)
                    if (line.startsWith('## **') && line.endsWith('**')) {
                      currentCategory = line.replace(/^## \*\*/, '').replace(/\*\*$/, '');
                      continue;
                    }
                    
                    // Check for tool entries (- [Tool Name](url) - Description)
                    const toolMatch = line.match(/^- \[([^\]]+)\]\(([^)]+)\) - (.+)$/);
                    if (toolMatch && currentCategory && !currentCategory.includes('Articles')) {
                      const [, name, url, description] = toolMatch;
                      
                      tools.push({
                        name: name.trim(),
                        url: url.trim(),
                        description: description.trim(),
                        category: currentCategory.trim()
                      });
                    }
                  }

                  // Create the JSON structure
                  const awesomeData = {
                    title: 'Awesome SEO',
                    description: 'A curated list of SEO tools',
                    lastUpdated: new Date().toISOString(),
                    totalTools: tools.length,
                    categories: [...new Set(tools.map(tool => tool.category))].sort(),
                    tools: tools.sort((a, b) => a.name.localeCompare(b.name))
                  };

                  // Write to docs/awesome.json
                  fs.writeFileSync('docs/awesome.json', JSON.stringify(awesomeData, null, 2));

                  console.log(\`Generated awesome.json with \${tools.length} tools in \${awesomeData.categories.length} categories\`);
                  "

            - name: Commit and push changes
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add docs/awesome.json

                  # Check if there are changes to commit
                  if git diff --staged --quiet; then
                    echo "No changes to commit"
                  else
                    git commit -m "ðŸ¤– Auto-update awesome.json from README.md"
                    git push
                  fi
